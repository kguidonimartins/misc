% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_sheet_then_save_csv.R
\name{read_sheet_then_save_csv}
\alias{read_sheet_then_save_csv}
\title{Read an excel sheet and save it to a CSV file}
\usage{
read_sheet_then_save_csv(
  excel_sheet,
  path_to_xlsx,
  dir_to_save = NULL,
  range = NULL,
  col_types = NULL,
  col_names = TRUE,
  na = "",
  trim_ws = TRUE,
  skip = 0,
  n_max = Inf,
  guess_max = min(1000, n_max),
  .name_repair = "unique"
)
}
\arguments{
\item{excel_sheet}{a character vector with the name of the excel sheet}

\item{path_to_xlsx}{a character vector with the path of the excel file}

\item{dir_to_save}{a character vector with the path to save the csv file.
Default is NULL and save the csv in the "data/temp" if it exists.}

\item{range}{A cell range to read from. Includes typical Excel ranges like
"B3:D87".}

\item{col_types}{Either NULL to guess all from the spreadsheet or a character
vector containing one entry per column from these options: "skip", "guess",
"logical", "numeric", "date", "text" or "list". If exactly one col_type is
specified, it will be recycled.}

\item{col_names}{TRUE to use the first row as column names}

\item{na}{Character vector of strings to interpret as missing values. By
default, treats blank cells as missing data.}

\item{trim_ws}{Should leading and trailing whitespace be trimmed?}

\item{skip}{Minimum number of rows to skip before reading anything, be it
column names or data.}

\item{n_max}{Maximum number of data rows to read.}

\item{guess_max}{Maximum number of data rows to use for guessing column
types.}

\item{.name_repair}{Handling of column names}
}
\description{
\code{read_sheet_then_save_csv()} is heavily inspired in \code{readxl::read_excel()}
(actually, this inherit almost all argument from it).
}
\section{Acknowledgment}{

\code{read_sheet_then_save_csv()} is an adaptation of the awesome workflow described
in an \href{https://readxl.tidyverse.org/articles/articles/readxl-workflows.html}{article}
from \code{{readxl}} package site.
}

\examples{
\dontrun{
# read and into a csv
misc::create_dirs("ma-box")
xlsx_file <-
  system.file("xlsx-examples", "mtcars_workbook_001.xlsx", package = "misc")
read_sheet_then_save_csv(
  excel_sheet = "mtcars_sheet_001",
  path_to_xlsx = xlsx_file,
  dir_to_save = "ma-box"
)
}
}
